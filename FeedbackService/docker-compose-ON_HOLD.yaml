version: '3'
services:
  # App backend service
  questionnaire-service:
    build:
      context: . # Use an image built from the specified dockerfile in the `questionnaire_service_image` directory.
      dockerfile: Dockerfile
    ports:
      - "9090:9090" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    #    restart: always
    depends_on:
      - questionnaireServiceDB # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://questionnaireServiceDB:3306/questionnaire_db?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: questionnaire_db_user
      SPRING_DATASOURCE_PASSWORD: questionnaire_db_user_pass
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
  # Database Service (Mysql)
  questionnaireServiceDB:
    image: mysql:5.7
    container_name: questionnaireServiceDB
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: questionnaire_db
      MYSQL_USER: questionnaire_db_user
      MYSQL_PASSWORD: questionnaire_db_user_pass
    ports:
      - "3306:3306"
    volumes:
      - questionnaireServiceDataVolume:/home/soa/project/data/feebackServiceDB
    networks:
      - backend
  adminer:
    image: adminer
        restart: on-failure
    ports:
      - 8081:8080
    networks:
      - backend

volumes:
  questionnaireServiceDataVolume:

# Networks to be created to facilitate communication between containers
networks:
  backend: